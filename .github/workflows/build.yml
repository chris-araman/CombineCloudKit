name: Lint, Build, & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build (${{ matrix.platform }}, Swift ${{ matrix.swift }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        swift: ['5.1', '5.2', '5.3', '5.4']
        platform: [macOS, iOS, tvOS, watchOS]
        include:
          # The latest version of Xcode that supports each release of Swift.
          # https://developer.apple.com/support/xcode/
          - swift: '5.1'
            xcode: ~11.3
            action_spm: build
            action_xc: build
          - swift: '5.2'
            xcode: ~11.7
            action_spm: test
            action_xc:
          - swift: '5.3'
            xcode: ~12.4
            action_spm: test
            action_xc:
          - swift: '5.4'
            xcode: ^12
            action_spm: test
            action_xc:
    steps:
    - name: Clone
      uses: actions/checkout@v2
    - name: Use Swift ${{ matrix.swift }}
      uses: fwal/setup-swift@v1
      with:
        swift-version: ${{ matrix.swift }}
    - name: ${{ matrix.platform }} with xcodebuild
      uses: mxcl/xcodebuild@v1
      with:
        action: ${{ matrix.action_xc }}
        platform: ${{ matrix.platform }}
        xcode: ${{ matrix.xcode }}
    - name: macOS with Swift Package Manager
      if: ${{ matrix.platform == 'macOS' }}
      run: xcrun swift ${{ matrix.action_build }}
  lint-sanitize-coverage:
    name: Lint, Sanitize, & Coverage
    runs-on: macos-latest
    env:
      TOOLCHAINS: swift
    steps:
    - name: Clone
      uses: actions/checkout@v2
    - name: Use Swift 5.4
      uses: fwal/setup-swift@v1
      with:
        swift-version: 5.4
    - name: Lint
      run: script/lint
    - name: Address Sanitizer
      run: xcrun swift test --sanitize=address
    - name: Thread Sanitizer
      run: xcrun swift test --sanitize=thread
    - name: Undefined Behavior Sanitizer
      run: xcrun swift test --sanitize=undefined
    - name: Coverage
      run: |
        xcrun swift test --enable-code-coverage
        cd .build/$(uname -m)-apple-macosx/debug
        xcrun llvm-cov show -use-color -instr-profile=codecov/default.profdata CombineCloudKitPackageTests.xctest/Contents/MacOS/CombineCloudKitPackageTests > coverage.txt
        bash <(curl -s https://codecov.io/bash) -f coverage.txt -Z
