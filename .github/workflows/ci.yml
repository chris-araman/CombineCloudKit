name: Continuous Integration
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    name: Lint
    # CocoaPods requires Xcode 12.5, which is currently only available on macos-11, in order to validate watchOS tests.
    # TODO: Use macos-latest once it is >= 11.
    runs-on: macos-11
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Cache Swift Dependencies
        uses: actions/cache@v2
        with:
          path: .build
          key: spm-${{ runner.os }}-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-
      - name: Lint
        run: script/lint
  build-test:
    name: ${{ matrix.name || 'Build & Test' }} (Swift ${{ matrix.swift }}, ${{ matrix.platform-name || matrix.platform }})
    runs-on: macos-${{ matrix.macos || '11' }}
    strategy:
      fail-fast: false
      matrix:
        swift: ['5.1', '5.2', '5.3', '5.4', '5.5']
        platform: [macOS, iOS, tvOS, watchOS]
        include:
          # The macOS 11 environment no longer includes Swift 5.1.
          - swift: '5.1'
            macos: '10.15'
          # XCTest for watchOS requires Swift 5.4.
          - swift: '5.1'
            platform: watchOS
            name: Build
          - swift: '5.2'
            platform: watchOS
            name: Build
          - swift: '5.3'
            platform: watchOS
            name: Build
          - swift: '5.5'
            platform: mac-catalyst
            platform-name: Mac Catalyst
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Cache Swift Dependencies
        uses: actions/cache@v2
        with:
          path: .build
          key: spm-${{ runner.os }}-swift${{ matrix.swift }}-${{ matrix.platform }}-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-swift${{ matrix.swift }}-${{ matrix.platform }}-
            spm-${{ runner.os }}-
      - name: ${{ matrix.name || 'Build & Test' }}
        uses: mxcl/xcodebuild@v1
        with:
          platform: ${{ matrix.platform }}
          swift: ~${{ matrix.swift }}
          code-coverage: true
          warnings-as-errors: true
      - name: Prepare for Code Coverage
        if: ${{ matrix.name != 'Build' }}
        uses: sersoft-gmbh/xcode-coverage-action@v2
        with:
          fail-on-empty-output: true
          output: .xcodecov
          target-name-filter: CombineCloudKit
      - name: Coverage
        if: ${{ matrix.name != 'Build' }}
        uses: codecov/codecov-action@v2
        with:
          flags: ${{ matrix.platform }},swift${{ matrix.swift }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: .xcodecov
  sanitize:
    name: ${{ matrix.name }} Sanitizer
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        # TODO: Add 'scudo' once it is supported by Swift.
        sanitizer: [address, thread, undefined]
        include:
          - sanitizer: address
            name: Address
          - sanitizer: thread
            name: Thread
          - sanitizer: undefined
            name: Undefined Behavior
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Cache Swift Dependencies
        uses: actions/cache@v2
        with:
          path: .build
          key: spm-${{ runner.os }}-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-
      - name: Sanitize
        run: swift test --sanitize=${{ matrix.sanitizer }}
